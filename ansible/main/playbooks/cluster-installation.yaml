---
- name: Cluster Installation
  hosts: kubernetes
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 2 seconds...
      ansible.builtin.pause:
        seconds: 2
  tasks:
    - name: Check if cluster is installed
      check_mode: false
      ansible.builtin.stat:
        path: /etc/rancher/k3s/config.yaml
      register: k3s_installed

    - name: Check if cluster can be upgraded
      when: k3s_installed.stat.exists
      ansible.builtin.include_tasks: tasks/upgrade.yaml

    - name: Ignore manifests templates and urls if the cluster is already installed
      when: k3s_installed.stat.exists
      ansible.builtin.set_fact:
        k3s_server_manifests_templates: []
        k3s_server_manifests_urls: []

    - name: Install Kubernetes
      ansible.builtin.include_role:
        name: xanmanning.k3s
        public: true
      vars:
        k3s_state: installed

    - name: Wait for custom manifests to rollout
      when:
        - k3s_primary_control_node
        - (k3s_server_manifests_templates | length > 0
            or k3s_server_manifests_urls | length > 0)
      kubernetes.core.k8s_info:
        kubeconfig: /etc/rancher/k3s/k3s.yaml
        kind: "{{ item.kind }}"
        name: "{{ item.name }}"
        namespace: "{{ item.namespace | default('') }}"
        wait: true
        wait_sleep: 10
        wait_timeout: 360
      loop:
        - { name: cilium, kind: HelmChart, namespace: kube-system }

    - name: Cilium
      when: k3s_primary_control_node
      ansible.builtin.include_tasks: tasks/cilium.yaml


    - name: Cruft
      when: k3s_primary_control_node
      ansible.builtin.include_tasks: tasks/cruft.yaml
### get the kubeconfig file

    - name: Get absolute path to this Git repository
      delegate_to: localhost
      become: false
      run_once: true
      check_mode: false
      ansible.builtin.command: |-
        git rev-parse --show-toplevel
      register: repo_abs_path

    - name: Copy kubeconfig project directory
      run_once: true
      ansible.builtin.fetch:
        src: "/etc/rancher/k3s/k3s.yaml"
        dest: "{{ repo_abs_path.stdout }}/kubeconfig"
        flat: true
      when:
        - k3s_control_node is defined
        - k3s_control_node

    - name: Update kubeconfig with the correct IPv4 address
      delegate_to: localhost
      become: false
      run_once: true
      ansible.builtin.replace:
        path: "{{ repo_abs_path.stdout }}/kubeconfig"
        regexp: "https://127.0.0.1:6443"
        replace: "https://{{ k3s_registration_address }}:6443"
